"---------------------------------------------------------------------------
" NeoBundle の設定
"---------------------------------------------------------------------------

" NeoBundle初期化 ファイルタイプ別のプラグイン/インデントを無効にする
filetype off
"
if has('vim_starting')
   " 初回起動時のみruntimepathにneobundleのパスを指定する
   set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" NeoBundleを初期化
call neobundle#begin(expand('~/.vim/bundle/'))

" neobundle自身も自動アップデートする
NeoBundleFetch 'Shougo/neobundle.vim'

" Color-Scheme {{{

  " badwolf カラースキーム
  NeoBundle 'sjl/badwolf'
  " mustang カラースキーム
  NeoBundle 'croaker/mustang-vim'
  " jellybeans カラースキーム
  NeoBundle 'nanotech/jellybeans.vim'
  " zenburn カラースキーム
  NeoBundle 'vim-scripts/Zenburn'
  " molokai カラースキーム
  NeoBundle 'tomasr/molokai'
  " monokai カラースキーム
  NeoBundle 'sickill/vim-monokai'
  " hybrid カラースキーム
  NeoBundle 'w0ng/vim-hybrid'
  " hybrid カラースキーム
  NeoBundle 'marciomazza/vim-brogrammer-theme'

" }}}

" Unite.vim {{{

  NeoBundle 'Shougo/unite.vim'
  NeoBundle 'Shougo/vimfiler'
  " Unite file_mru
  NeoBundle 'Shougo/neomru.vim'
  " Unite vimproc
  NeoBundle 'Shougo/vimproc.vim'

" }}}

" NERDTree
NeoBundle 'scrooloose/nerdtree'

" markdown のsyntax
NeoBundle 'tpope/vim-markdown'

" Vim を開いた状態で color-scheme のプレビューと選択ができる
NeoBundle 'ujihisa/unite-colorscheme'

" インデントを可視化する
NeoBundle 'nathanaelkane/vim-indent-guides'

" ステータスラインをかっこよくする
NeoBundle 'alpaca-tc/alpaca_powertabline'
" powerline
NeoBundle 'Lokaltog/powerline', { 'rtp' : 'powerline/bindings/vim'}
" powerline 表示に必要な Ricty for powerline の生成に必要
NeoBundle 'Lokaltog/powerline-fontpatcher'

call neobundle#end()

" NeoBundleCheck を走らせ起動時に未インストールプラグインをインストールする
NeoBundleCheck

" ファイルタイプ別のプラグイン/インデントを有効にする
filetype plugin indent on



""""""""""""""""""""""""""""""
" Unite.vim の設定
""""""""""""""""""""""""""""""
" unite key-map
nnoremap [unite] <Nop>
nmap f [unite]

" ファイル一覧（全画面で表示、立ち上げた時に入力（検索）モードにする、「~」を認識させる）
noremap [unite]f :<C-u>Unite -no-split -start-insert -buffer-name=files file<CR>
" バッファ一覧
noremap [unite]b :<C-u>Unite -no-split -start-insert buffer<CR>
" 最近使ったファイルの一覧
noremap [unite]r :<C-u>Unite -no-split -start-insert file_mru<CR>
" 今開いているファイルの階層のファイル一覧
noremap [unite]c :<C-u>UniteWithBufferDir -no-split -start-insert file<CR>
" ウィンドウを分割して開く
autocmd FileType unite nnoremap <silent> <buffer> <expr> <C-s> unite#do_action('split')
autocmd FileType unite inoremap <silent> <buffer> <expr> <C-s> unite#do_action('split')
" ウィンドウを縦に分割して開く
autocmd FileType unite nnoremap <silent> <buffer> <expr> <C-v> unite#do_action('vsplit')
autocmd FileType unite inoremap <silent> <buffer> <expr> <C-v> unite#do_action('vsplit')
" ESCキーを2回押すと終了する
autocmd FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
autocmd FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>
""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""
" NERDTree の設定
""""""""""""""""""""""""""""""
" NERDTree の on/off
nnoremap <Space>n :<C-u>NERDTreeToggle<CR>
" 隠しファイルをデフォルトで表示させる
let NERDTreeShowHidden = 1
" 最後に残ったウィンドウが NERDTree のみのときは vim を閉じる
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
" NERDTreeを+|`などを使ってツリー表示をする
"let g:NERDTreeDirArrows=0


""""""""""""""""""""""""""""""
" vim-indent-guides の設定
""""""""""""""""""""""""""""""
" IndendGuids の on/off
nnoremap <Space>ig :<C-u>IndentGuidesToggle<Enter>
" vim を立ち上げた時に自動的に vim-indent-guides を on にする
let g:indent_guides_enable_on_vim_startup=1
" 自動的に色付けをしない
let g:indent_guides_auto_colors=0
" インデントの色付け幅
let g:indent_guides_guide_size = 1
" 2段目から色付けする
let g:indent_guides_start_level=2

" 奇数インデントの色
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=238
" 偶数インデントの色
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=236

""""""""""""""""""""""""""""""
" powerline の設定
""""""""""""""""""""""""""""""
" ステータスの配置を設定
let g:Powerline_symbols = 'fancy'" 
